openapi: 3.0.4
info:
  title: INES Pokemon Microservice - OpenAPI 1.0
  description: |-
    This is a sample Pokemon Microservice based on the OpenAPI 3.0 specification.
  contact:
    email: ulysse.holzinger@etu.mines-ales.fr
  version: 1.0.0
externalDocs:
  description: Find out more about Pokemon Microservice
  url: https://github.com/INES-Architecture-Middleware/INES-MS-Pokemon/blob/main/README.md
servers:
  - url: https://localhost/api/v1
tags:
  - name: pokemon
    description: Everything about Pokemons
paths:
  /pokemon:
    get:
      tags:
        - pokemon
      summary: Get all Pokemons with pagination
      description: Returns a paginated list of Pokemons.
      operationId: getAllPokemons
      parameters:
        - name: offset
          in: query
          description: Number of items to skip before starting to collect the result set.
          required: true
          schema:
            type: integer
            minimum: 0
            example: 0
        - name: limit
          in: query
          description: Maximum number of items to return (default 50).
          required: false
          schema:
            type: integer
            minimum: 1
            default: 50
            example: 50
      responses:
        '200':
          description: A paginated list of Pokemons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pokemon'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pokemon'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /pokemon/{id}:
    get:
      tags:
        - pokemon
      summary: Get Pokemon by ID
      description: Returns a single Pokemon by its PokéAPI ID.
      operationId: getPokemonById
      parameters:
        - name: id
          in: path
          description: ID of the Pokemon to fetch.
          required: true
          schema:
            type: integer
            minimum: 1
            example: 25
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pokemon'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pokemon'
        '404':
          description: Pokemon not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Pokemon:
      type: object
      required:
        - name
        - pokeapi_id
        - types
        - image
      properties:
        pokeapi_id:
          type: integer
          description: The id of the Pokemon in PokéAPI
          example: 25
        name:
          type: string
          description: The name of the Pokemon
          example: pikachu
        types:
          type: array
          description: Types of the Pokemon
          items:
            type: string
            example: electric
        image:
          type: string
          description: URL of the Pokemon's image
          example: https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png
      xml:
        name: Pokemon

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string

  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
